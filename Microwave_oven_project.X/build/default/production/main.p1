Version 4.0 HI-TECH Software Intermediate Code
"37 ./clcd.h
[; ;./clcd.h: 37: void init_clcd(void);
[v _init_clcd `(v ~T0 @X0 0 ef ]
"30 ./matrix_keypad.h
[; ;./matrix_keypad.h: 30: void init_matrix_keypad(void);
[v _init_matrix_keypad `(v ~T0 @X0 0 ef ]
"2965 C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2965: extern volatile __bit TRISC2 __attribute__((address(0x43A)));
[v _TRISC2 `Vb ~T0 @X0 0 e@1082 ]
"2710
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2710: extern volatile __bit RC2 __attribute__((address(0x3A)));
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"12 ./timers.h
[; ;./timers.h: 12: void init_timer2(void);
[v _init_timer2 `(v ~T0 @X0 0 ef ]
"2629 C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2629: extern volatile __bit PEIE __attribute__((address(0x5E)));
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"2569
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2569: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"2707
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2707: extern volatile __bit RC1 __attribute__((address(0x39)));
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"2962
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2962: extern volatile __bit TRISC1 __attribute__((address(0x439)));
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
"2944
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2944: extern volatile __bit TRISB3 __attribute__((address(0x433)));
[v _TRISB3 `Vb ~T0 @X0 0 e@1075 ]
[p mainexit ]
"29 ./matrix_keypad.h
[; ;./matrix_keypad.h: 29: unsigned char read_matrix_keypad(unsigned char mode);
[v _read_matrix_keypad `(uc ~T0 @X0 0 ef1`uc ]
"2683 C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2683: extern volatile __bit RB3 __attribute__((address(0x33)));
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"48 ./main.h
[; ;./main.h: 48: void door_status(void);
[v _door_status `(v ~T0 @X0 0 ef ]
"44
[; ;./main.h: 44: void clear_screen(void);
[v _clear_screen `(v ~T0 @X0 0 ef ]
"39 ./clcd.h
[; ;./clcd.h: 39: void clcd_print(const char *str, unsigned char addr);
[v _clcd_print `(v ~T0 @X0 0 ef2`*Cuc`uc ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files\Microchip\xc8\v2.10\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"2902 C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2902: extern volatile __bit TMR2ON __attribute__((address(0x92)));
[v _TMR2ON `Vb ~T0 @X0 0 e@146 ]
"42 ./main.h
[; ;./main.h: 42: void power_on_screen(void);
[v _power_on_screen `(v ~T0 @X0 0 ef ]
"43
[; ;./main.h: 43: void menu_display_screen(void);
[v _menu_display_screen `(v ~T0 @X0 0 ef ]
"45
[; ;./main.h: 45: void set_time(unsigned char key, int reset_flag);
[v _set_time `(v ~T0 @X0 0 ef2`uc`i ]
"47
[; ;./main.h: 47: void set_temp(unsigned char key, int reset_flag);
[v _set_temp `(v ~T0 @X0 0 ef2`uc`i ]
"46
[; ;./main.h: 46: void time_display_screen(void);
[v _time_display_screen `(v ~T0 @X0 0 ef ]
"38 ./clcd.h
[; ;./clcd.h: 38: void clcd_putch(const char data, unsigned char addr);
[v _clcd_putch `(v ~T0 @X0 0 ef2`Cuc`uc ]
"40
[; ;./clcd.h: 40: void clcd_write(unsigned char byte, unsigned char mode);
[v _clcd_write `(v ~T0 @X0 0 ef2`uc`uc ]
"54 C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"10 main.c
[; ;main.c: 10: 
[p x WDTE = OFF ]
"12
[; ;main.c: 12:     init_timer2();
[v _sec `uc ~T0 @X0 1 e ]
[i _sec
-> -> 0 `i `uc
]
[v _min `uc ~T0 @X0 1 e ]
[i _min
-> -> 0 `i `uc
]
[v _flag `uc ~T0 @X0 1 e ]
[i _flag
-> -> 0 `i `uc
]
"13
[; ;main.c: 13: 
[v _operation_flag `i ~T0 @X0 1 e ]
[i _operation_flag
-> 1 `i
]
"14
[; ;main.c: 14:     PEIE = 1;
[v _init_config `(v ~T0 @X0 1 sf ]
{
[e :U _init_config ]
[f ]
"16
[; ;main.c: 16: 
[e ( _init_clcd ..  ]
"17
[; ;main.c: 17:     RC1 = 0;
[e ( _init_matrix_keypad ..  ]
"20
[; ;main.c: 20:     TRISB3 = 1;
[e = _TRISC2 -> -> 0 `i `b ]
"21
[; ;main.c: 21: 
[e = _RC2 -> -> 0 `i `b ]
"24
[; ;main.c: 24: void main(void) {
[e ( _init_timer2 ..  ]
"26
[; ;main.c: 26: 
[e = _PEIE -> -> 1 `i `b ]
"27
[; ;main.c: 27: 
[e = _GIE -> -> 1 `i `b ]
"29
[; ;main.c: 29:     int reset_flag;
[e = _RC1 -> -> 0 `i `b ]
"30
[; ;main.c: 30:     while (1) {
[e = _TRISC1 -> -> 0 `i `b ]
"32
[; ;main.c: 32: 
[e = _TRISB3 -> -> 1 `i `b ]
"34
[; ;main.c: 34:         if (RB3 == 0) {
[e :UE 95 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"36
[; ;main.c: 36:             door_status();
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"37
[; ;main.c: 37:         }
[e ( _init_config ..  ]
"40
[; ;main.c: 40:         {
[v _key `uc ~T0 @X0 1 a ]
"41
[; ;main.c: 41: 
[v _reset_flag `i ~T0 @X0 1 a ]
"42
[; ;main.c: 42:         if(key == 1)
[e :U 98 ]
{
"43
[; ;main.c: 43:         {
[e = _key ( _read_matrix_keypad (1 -> -> 1 `i `uc ]
"46
[; ;main.c: 46:             clear_screen();
[e $ ! == -> _RB3 `i -> 0 `i 100  ]
{
"48
[; ;main.c: 48:             _delay((unsigned long)((2000)*(20000000/4000.0)));
[e ( _door_status ..  ]
"49
[; ;main.c: 49:             clear_screen();
}
[e :U 100 ]
"51
[; ;main.c: 51:         }
[e $ ! == _operation_flag -> 2 `i 101  ]
"52
[; ;main.c: 52:         else if(key == 2)
{
"54
[; ;main.c: 54:             operation_flag = 0x04;
[e $ ! == -> _key `i -> 1 `i 102  ]
"55
[; ;main.c: 55:             reset_flag = 0x10;
{
"56
[; ;main.c: 56:             clear_screen();
[e = _operation_flag -> 3 `i ]
"57
[; ;main.c: 57:         }
[e = _reset_flag -> 16 `i ]
"58
[; ;main.c: 58:         else if(key == 3)
[e ( _clear_screen ..  ]
"59
[; ;main.c: 59:         {
[e ( _clcd_print (2 , :s 1C -> + -> 192 `i -> 0 `i `uc ]
"60
[; ;main.c: 60:             operation_flag = 0x05;
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"61
[; ;main.c: 61:             reset_flag = 0x10;
[e ( _clear_screen ..  ]
"63
[; ;main.c: 63:         }
}
[e $U 103  ]
"64
[; ;main.c: 64:         else if(key == 4)
[e :U 102 ]
[e $ ! == -> _key `i -> 2 `i 104  ]
"65
[; ;main.c: 65:         {
{
"66
[; ;main.c: 66:             sec = 30;
[e = _operation_flag -> 4 `i ]
"67
[; ;main.c: 67:             min = 0;
[e = _reset_flag -> 16 `i ]
"68
[; ;main.c: 68:             RC2 = 1;
[e ( _clear_screen ..  ]
"69
[; ;main.c: 69:             TMR2ON = 1;
}
[e $U 105  ]
"70
[; ;main.c: 70:             clear_screen();
[e :U 104 ]
[e $ ! == -> _key `i -> 3 `i 106  ]
"71
[; ;main.c: 71:             operation_flag = 0x07;
{
"72
[; ;main.c: 72:         }
[e = _operation_flag -> 5 `i ]
"73
[; ;main.c: 73:         }
[e = _reset_flag -> 16 `i ]
"74
[; ;main.c: 74:          else if(operation_flag == 0x07)
[e ( _clear_screen ..  ]
"75
[; ;main.c: 75:         {
}
[e $U 107  ]
"76
[; ;main.c: 76:             if(key == 4)
[e :U 106 ]
[e $ ! == -> _key `i -> 4 `i 108  ]
"77
[; ;main.c: 77:             {
{
"78
[; ;main.c: 78:                 sec = sec + 30;
[e = _sec -> -> 30 `i `uc ]
"79
[; ;main.c: 79:                 if(sec > 59)
[e = _min -> -> 0 `i `uc ]
"80
[; ;main.c: 80:                 {
[e = _RC2 -> -> 1 `i `b ]
"81
[; ;main.c: 81:                     min++;
[e = _TMR2ON -> -> 1 `i `b ]
"82
[; ;main.c: 82:                     sec = sec -60;
[e ( _clear_screen ..  ]
"83
[; ;main.c: 83:                 }
[e = _operation_flag -> 7 `i ]
"84
[; ;main.c: 84:             }
}
[e :U 108 ]
[e :U 107 ]
[e :U 105 ]
[e :U 103 ]
"85
[; ;main.c: 85:             else if(key == 5)
}
[e $U 109  ]
"86
[; ;main.c: 86:             {
[e :U 101 ]
[e $ ! == _operation_flag -> 7 `i 110  ]
"87
[; ;main.c: 87:                 operation_flag = 0x09;
{
"88
[; ;main.c: 88:             }
[e $ ! == -> _key `i -> 4 `i 111  ]
"89
[; ;main.c: 89:             else if(key == 6)
{
"90
[; ;main.c: 90:             {
[e = _sec -> + -> _sec `i -> 30 `i `uc ]
"91
[; ;main.c: 91:                 operation_flag = 0x0A;
[e $ ! > -> _sec `i -> 59 `i 112  ]
"92
[; ;main.c: 92:                 clear_screen();
{
"93
[; ;main.c: 93:             }
[e ++ _min -> -> 1 `i `uc ]
"94
[; ;main.c: 94:         }
[e = _sec -> - -> _sec `i -> 60 `i `uc ]
"95
[; ;main.c: 95:         else if(operation_flag == 0x09)
}
[e :U 112 ]
"96
[; ;main.c: 96:         {
}
[e $U 113  ]
"97
[; ;main.c: 97:             if (key ==4)
[e :U 111 ]
[e $ ! == -> _key `i -> 5 `i 114  ]
"98
[; ;main.c: 98:             {
{
"99
[; ;main.c: 99:                 RC2 = 1;
[e = _operation_flag -> 9 `i ]
"100
[; ;main.c: 100:                 TMR2ON = 1;
}
[e $U 115  ]
"101
[; ;main.c: 101:                 operation_flag = 0x07;
[e :U 114 ]
[e $ ! == -> _key `i -> 6 `i 116  ]
"102
[; ;main.c: 102:             }
{
"103
[; ;main.c: 103:         }
[e = _operation_flag -> 10 `i ]
"104
[; ;main.c: 104: 
[e ( _clear_screen ..  ]
"105
[; ;main.c: 105: 
}
[e :U 116 ]
[e :U 115 ]
[e :U 113 ]
"106
[; ;main.c: 106:         switch(operation_flag)
}
[e $U 117  ]
"107
[; ;main.c: 107:         {
[e :U 110 ]
[e $ ! == _operation_flag -> 9 `i 118  ]
"108
[; ;main.c: 108:             case 0x01:
{
"109
[; ;main.c: 109: 
[e $ ! == -> _key `i -> 4 `i 119  ]
"110
[; ;main.c: 110:                 power_on_screen();
{
"111
[; ;main.c: 111:                 operation_flag = 0x02;
[e = _RC2 -> -> 1 `i `b ]
"112
[; ;main.c: 112:                 clear_screen();
[e = _TMR2ON -> -> 1 `i `b ]
"113
[; ;main.c: 113:                 break;
[e = _operation_flag -> 7 `i ]
"114
[; ;main.c: 114:             case 0x02:
}
[e :U 119 ]
"115
[; ;main.c: 115:                 menu_display_screen();
}
[e :U 118 ]
[e :U 117 ]
[e :U 109 ]
"118
[; ;main.c: 118:                 set_time(key,reset_flag);
[e $U 121  ]
"119
[; ;main.c: 119:                 break;
{
"120
[; ;main.c: 120:             case 0x03:
[e :U 122 ]
"122
[; ;main.c: 122:                 break;
[e ( _power_on_screen ..  ]
"123
[; ;main.c: 123:             case 0x05:
[e = _operation_flag -> 2 `i ]
"124
[; ;main.c: 124: 
[e ( _clear_screen ..  ]
"125
[; ;main.c: 125:                 if(flag == 0)
[e $U 120  ]
"126
[; ;main.c: 126:                 {
[e :U 123 ]
"127
[; ;main.c: 127:                     set_temp(key,reset_flag);
[e ( _menu_display_screen ..  ]
"128
[; ;main.c: 128:                     if(flag == 1)
[e $U 120  ]
"129
[; ;main.c: 129:                     {
[e :U 124 ]
"130
[; ;main.c: 130:                         clear_screen();
[e ( _set_time (2 , _key _reset_flag ]
"131
[; ;main.c: 131:                         reset_flag = 0x10;
[e $U 120  ]
"132
[; ;main.c: 132:                         continue;
[e :U 125 ]
"133
[; ;main.c: 133:                     }
[e ( _set_time (2 , _key _reset_flag ]
"134
[; ;main.c: 134:                 }
[e $U 120  ]
"135
[; ;main.c: 135:                 else if(flag == 1)
[e :U 126 ]
"137
[; ;main.c: 137:                     set_time(key, reset_flag);
[e $ ! == -> _flag `i -> 0 `i 127  ]
"138
[; ;main.c: 138:                 }
{
"139
[; ;main.c: 139:                 break;
[e ( _set_temp (2 , _key _reset_flag ]
"140
[; ;main.c: 140:             case 0x07:
[e $ ! == -> _flag `i -> 1 `i 128  ]
"141
[; ;main.c: 141:                 time_display_screen();
{
"142
[; ;main.c: 142:                 break;
[e ( _clear_screen ..  ]
"143
[; ;main.c: 143:             case 0x09:
[e = _reset_flag -> 16 `i ]
"144
[; ;main.c: 144:                 RC2 = 0;
[e $U 97  ]
"145
[; ;main.c: 145:                 TMR2ON = 0;
}
[e :U 128 ]
"146
[; ;main.c: 146:                 break;
}
[e $U 129  ]
"147
[; ;main.c: 147:             case 0x0A:
[e :U 127 ]
[e $ ! == -> _flag `i -> 1 `i 130  ]
"148
[; ;main.c: 148:                 RC2 = 0;
{
"149
[; ;main.c: 149:                 TMR2ON = 0;
[e ( _set_time (2 , _key _reset_flag ]
"150
[; ;main.c: 150:                 operation_flag = 0x02;
}
[e :U 130 ]
[e :U 129 ]
"151
[; ;main.c: 151:                 break;
[e $U 120  ]
"152
[; ;main.c: 152:         }
[e :U 131 ]
"153
[; ;main.c: 153:         reset_flag = 0x0F;
[e ( _time_display_screen ..  ]
"154
[; ;main.c: 154:     }
[e $U 120  ]
"155
[; ;main.c: 155: }
[e :U 132 ]
"156
[; ;main.c: 156: void door_status(void)
[e = _RC2 -> -> 0 `i `b ]
"157
[; ;main.c: 157: {
[e = _TMR2ON -> -> 0 `i `b ]
"158
[; ;main.c: 158:     if(RB3 == 0)
[e $U 120  ]
"159
[; ;main.c: 159:     {
[e :U 133 ]
"160
[; ;main.c: 160:         TMR2ON = 0;
[e = _RC2 -> -> 0 `i `b ]
"161
[; ;main.c: 161:         RC2 = 0;
[e = _TMR2ON -> -> 0 `i `b ]
"162
[; ;main.c: 162:         RC1 = 1;
[e = _operation_flag -> 2 `i ]
"163
[; ;main.c: 163:         clear_screen();
[e $U 120  ]
"164
[; ;main.c: 164:         clcd_print("DOOR is Open",(0xC0 + 0));
}
[e $U 120  ]
[e :U 121 ]
[e [\ _operation_flag , $ -> 1 `i 122
 , $ -> 2 `i 123
 , $ -> 4 `i 124
 , $ -> 3 `i 125
 , $ -> 5 `i 126
 , $ -> 7 `i 131
 , $ -> 9 `i 132
 , $ -> 10 `i 133
 120 ]
[e :U 120 ]
"165
[; ;main.c: 165:         clcd_print("Please Close",(0x90 + 0));
[e = _reset_flag -> 15 `i ]
"166
[; ;main.c: 166: 
}
[e :U 97 ]
[e $U 98  ]
[e :U 99 ]
"167
[; ;main.c: 167:         while(RB3 == 0)
[e :UE 96 ]
}
"168
[; ;main.c: 168:         {
[v _door_status `(v ~T0 @X0 1 ef ]
"169
[; ;main.c: 169:             ;
{
[e :U _door_status ]
[f ]
"170
[; ;main.c: 170:         }
[e $ ! == -> _RB3 `i -> 0 `i 135  ]
"171
[; ;main.c: 171:         RC1 = 0;
{
"172
[; ;main.c: 172:         TMR2ON = 1;
[e = _TMR2ON -> -> 0 `i `b ]
"173
[; ;main.c: 173:         RC2 = 1;
[e = _RC2 -> -> 0 `i `b ]
"174
[; ;main.c: 174:         clear_screen();
[e = _RC1 -> -> 1 `i `b ]
"175
[; ;main.c: 175:     }
[e ( _clear_screen ..  ]
"176
[; ;main.c: 176: }
[e ( _clcd_print (2 , :s 2C -> + -> 192 `i -> 0 `i `uc ]
"177
[; ;main.c: 177: void time_display_screen(void)
[e ( _clcd_print (2 , :s 3C -> + -> 144 `i -> 0 `i `uc ]
"179
[; ;main.c: 179:     door_status();
[e $U 136  ]
[e :U 137 ]
"180
[; ;main.c: 180: 
{
"182
[; ;main.c: 182: 
}
[e :U 136 ]
"179
[; ;main.c: 179:     door_status();
[e $ == -> _RB3 `i -> 0 `i 137  ]
[e :U 138 ]
"183
[; ;main.c: 183: 
[e = _RC1 -> -> 0 `i `b ]
"184
[; ;main.c: 184:     clcd_putch(min/10 + '0', (0x80 + 9));
[e = _TMR2ON -> -> 1 `i `b ]
"185
[; ;main.c: 185:     clcd_putch(min%10 + '0', (0x80 + 10));
[e = _RC2 -> -> 1 `i `b ]
"186
[; ;main.c: 186:     clcd_putch(':', (0x80 + 11));
[e ( _clear_screen ..  ]
"187
[; ;main.c: 187: 
}
[e :U 135 ]
"188
[; ;main.c: 188:     clcd_putch(sec/10 + '0', (0x80 + 12));
[e :UE 134 ]
}
"189
[; ;main.c: 189:     clcd_putch(sec%10 + '0', (0x80 + 13));
[v _time_display_screen `(v ~T0 @X0 1 ef ]
"190
[; ;main.c: 190: 
{
[e :U _time_display_screen ]
[f ]
"191
[; ;main.c: 191: 
[e ( _door_status ..  ]
"193
[; ;main.c: 193:     clcd_print(" 5.Pause",(0x90 + 0));
[e ( _clcd_print (2 , :s 4C -> + -> 128 `i -> 0 `i `uc ]
"196
[; ;main.c: 196:     if(sec == 0 && min == 0)
[e ( _clcd_putch (2 , -> + -> / -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 128 `i -> 9 `i `uc ]
"197
[; ;main.c: 197:     {
[e ( _clcd_putch (2 , -> + -> % -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 128 `i -> 10 `i `uc ]
"198
[; ;main.c: 198:         clear_screen();
[e ( _clcd_putch (2 , -> -> 58 `ui `uc -> + -> 128 `i -> 11 `i `uc ]
"200
[; ;main.c: 200:         RC1 = 1;
[e ( _clcd_putch (2 , -> + -> / -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 128 `i -> 12 `i `uc ]
"201
[; ;main.c: 201:         _delay((unsigned long)((3000)*(20000000/4000.0)));
[e ( _clcd_putch (2 , -> + -> % -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 128 `i -> 13 `i `uc ]
"204
[; ;main.c: 204:         RC2 = 0;
[e ( _clcd_print (2 , :s 5C -> + -> 192 `i -> 0 `i `uc ]
"205
[; ;main.c: 205:         TMR2ON = 0;
[e ( _clcd_print (2 , :s 6C -> + -> 144 `i -> 0 `i `uc ]
"206
[; ;main.c: 206:         operation_flag = 0x02;
[e ( _clcd_print (2 , :s 7C -> + -> 208 `i -> 0 `i `uc ]
"208
[; ;main.c: 208: }
[e $ ! && == -> _sec `i -> 0 `i == -> _min `i -> 0 `i 140  ]
"209
[; ;main.c: 209: 
{
"210
[; ;main.c: 210: void clear_screen(void)
[e ( _clear_screen ..  ]
"211
[; ;main.c: 211: {
[e ( _clcd_print (2 , :s 8C -> + -> 192 `i -> 0 `i `uc ]
"212
[; ;main.c: 212:     clcd_write(0x01, 0);
[e = _RC1 -> -> 1 `i `b ]
"213
[; ;main.c: 213:     _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"214
[; ;main.c: 214: }
[e ( _clear_screen ..  ]
"215
[; ;main.c: 215: void power_on_screen(void)
[e = _RC1 -> -> 0 `i `b ]
"216
[; ;main.c: 216: {
[e = _RC2 -> -> 0 `i `b ]
"217
[; ;main.c: 217:     unsigned char i;
[e = _TMR2ON -> -> 0 `i `b ]
"218
[; ;main.c: 218: 
[e = _operation_flag -> 2 `i ]
"219
[; ;main.c: 219:     for(i=0; i<16; i++)
}
[e :U 140 ]
"220
[; ;main.c: 220:     {
[e :UE 139 ]
}
"222
[; ;main.c: 222:         _delay((unsigned long)((100)*(20000000/4000.0)));
[v _clear_screen `(v ~T0 @X0 1 ef ]
"223
[; ;main.c: 223:     }
{
[e :U _clear_screen ]
[f ]
"224
[; ;main.c: 224:     clcd_print("  Powering ON  ", (0xC0 + 0));
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"225
[; ;main.c: 225:     clcd_print(" Microwave Oven ", (0x90 + 0));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"226
[; ;main.c: 226: 
[e :UE 141 ]
}
"227
[; ;main.c: 227:     for(i=0; i<16; i++)
[v _power_on_screen `(v ~T0 @X0 1 ef ]
"228
[; ;main.c: 228:     {
{
[e :U _power_on_screen ]
[f ]
"229
[; ;main.c: 229:         clcd_putch(0xFF, (0xD0 + i));
[v _i `uc ~T0 @X0 1 a ]
"231
[; ;main.c: 231:     }
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 143  ]
[e $U 144  ]
[e :U 143 ]
"232
[; ;main.c: 232: 
{
"233
[; ;main.c: 233: 
[e ( _clcd_putch (2 , -> -> 255 `i `uc -> + -> 128 `i -> _i `i `uc ]
"234
[; ;main.c: 234:     _delay((unsigned long)((3000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"235
[; ;main.c: 235: }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 143  ]
[e :U 144 ]
}
"236
[; ;main.c: 236: 
[e ( _clcd_print (2 , :s 9C -> + -> 192 `i -> 0 `i `uc ]
"237
[; ;main.c: 237: void menu_display_screen(void)
[e ( _clcd_print (2 , :s 10C -> + -> 144 `i -> 0 `i `uc ]
"239
[; ;main.c: 239:     clcd_print("1.Micro",(0x80 + 0));
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 146  ]
[e $U 147  ]
[e :U 146 ]
"240
[; ;main.c: 240:     clcd_print("2.Grill",(0xC0 + 0));
{
"241
[; ;main.c: 241:     clcd_print("3.Convection",(0x90 + 0));
[e ( _clcd_putch (2 , -> -> 255 `i `uc -> + -> 208 `i -> _i `i `uc ]
"242
[; ;main.c: 242:     clcd_print("4.Start",(0xD0 + 0));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"243
[; ;main.c: 243: }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 146  ]
[e :U 147 ]
}
"246
[; ;main.c: 246: {
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"247
[; ;main.c: 247:     static unsigned char key_count, blink, temp;
[e :UE 142 ]
}
"249
[; ;main.c: 249:     if(reset_flag == 0x10)
[v _menu_display_screen `(v ~T0 @X0 1 ef ]
"250
[; ;main.c: 250:     {
{
[e :U _menu_display_screen ]
[f ]
"251
[; ;main.c: 251:         key_count = 0;
[e ( _clcd_print (2 , :s 11C -> + -> 128 `i -> 0 `i `uc ]
"252
[; ;main.c: 252:         wait = 0;
[e ( _clcd_print (2 , :s 12C -> + -> 192 `i -> 0 `i `uc ]
"253
[; ;main.c: 253:         blink = 0;
[e ( _clcd_print (2 , :s 13C -> + -> 144 `i -> 0 `i `uc ]
"254
[; ;main.c: 254:         temp = 0;
[e ( _clcd_print (2 , :s 14C -> + -> 208 `i -> 0 `i `uc ]
"255
[; ;main.c: 255:         key = 0xFF;
[e :UE 149 ]
}
"257
[; ;main.c: 257:         clcd_putch(0xDF, (0x80 + 10));
[v _set_temp `(v ~T0 @X0 1 ef2`uc`i ]
"258
[; ;main.c: 258:         clcd_print("TEMP = ", (0xC0 + 0));
{
[e :U _set_temp ]
"257
[; ;main.c: 257:         clcd_putch(0xDF, (0x80 + 10));
[v _key `uc ~T0 @X0 1 r1 ]
[v _reset_flag `i ~T0 @X0 1 r2 ]
"258
[; ;main.c: 258:         clcd_print("TEMP = ", (0xC0 + 0));
[f ]
"259
[; ;main.c: 259:         clcd_print("(LIMIT : 180 C) ", (0x90 + 0));
[v F893 `uc ~T0 @X0 1 s key_count ]
[v F894 `uc ~T0 @X0 1 s blink ]
[v F895 `uc ~T0 @X0 1 s temp ]
"260
[; ;main.c: 260:         clcd_putch(0xDF, (0x90 + 12));
[v F896 `i ~T0 @X0 1 s wait ]
"261
[; ;main.c: 261:         clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));
[e $ ! == _reset_flag -> 16 `i 151  ]
"262
[; ;main.c: 262:     }
{
"263
[; ;main.c: 263:        if((key!='*')&& (key != '#')&& (key!= 0xFF))
[e = F893 -> -> 0 `i `uc ]
"264
[; ;main.c: 264:     {
[e = F896 -> 0 `i ]
"265
[; ;main.c: 265:         key_count++;
[e = F894 -> -> 0 `i `uc ]
"266
[; ;main.c: 266:         if(key_count <=3)
[e = F895 -> -> 0 `i `uc ]
"267
[; ;main.c: 267:         {
[e = _key -> -> 255 `i `uc ]
"268
[; ;main.c: 268:         temp = temp * 10 + key;
[e ( _clcd_print (2 , :s 15C -> + -> 128 `i -> 0 `i `uc ]
"269
[; ;main.c: 269:         }
[e ( _clcd_putch (2 , -> -> 223 `i `uc -> + -> 128 `i -> 10 `i `uc ]
"270
[; ;main.c: 270:     }
[e ( _clcd_print (2 , :s 16C -> + -> 192 `i -> 0 `i `uc ]
"271
[; ;main.c: 271:     else if(key == '*')
[e ( _clcd_print (2 , :s 17C -> + -> 144 `i -> 0 `i `uc ]
"272
[; ;main.c: 272:     {
[e ( _clcd_putch (2 , -> -> 223 `i `uc -> + -> 144 `i -> 12 `i `uc ]
"273
[; ;main.c: 273:         temp=0;
[e ( _clcd_print (2 , :s 18C -> + -> 208 `i -> 0 `i `uc ]
"274
[; ;main.c: 274:         key_count=0;
}
[e :U 151 ]
"275
[; ;main.c: 275:     }
[e $ ! && && != -> _key `ui -> 42 `ui != -> _key `ui -> 35 `ui != -> _key `i -> 255 `i 152  ]
"276
[; ;main.c: 276:     else if(key == '#')
{
"277
[; ;main.c: 277:     {
[e ++ F893 -> -> 1 `i `uc ]
"278
[; ;main.c: 278:         if(temp > 180 || temp==0)
[e $ ! <= -> F893 `i -> 3 `i 153  ]
"279
[; ;main.c: 279:         {
{
"280
[; ;main.c: 280:             clear_screen();
[e = F895 -> + * -> F895 `i -> 10 `i -> _key `i `uc ]
"281
[; ;main.c: 281:             clcd_print("  Temp. Invalid  ", (0xC0 + 0));
}
[e :U 153 ]
"282
[; ;main.c: 282:             _delay((unsigned long)((2000)*(20000000/4000.0)));
}
[e $U 154  ]
"283
[; ;main.c: 283:             clear_screen();
[e :U 152 ]
[e $ ! == -> _key `ui -> 42 `ui 155  ]
"284
[; ;main.c: 284:             operation_flag = 0x02;
{
"285
[; ;main.c: 285:         }
[e = F895 -> -> 0 `i `uc ]
"286
[; ;main.c: 286:         else if(temp <= 180 && temp!=0)
[e = F893 -> -> 0 `i `uc ]
"287
[; ;main.c: 287:         {
}
[e $U 156  ]
"288
[; ;main.c: 288:         clear_screen();
[e :U 155 ]
[e $ ! == -> _key `ui -> 35 `ui 157  ]
"289
[; ;main.c: 289: 
{
"290
[; ;main.c: 290:         clcd_print("  Pre-Heating  ", (0x80 + 0));
[e $ ! || > -> F895 `i -> 180 `i == -> F895 `i -> 0 `i 158  ]
"291
[; ;main.c: 291:         clcd_print(" Time Rem.= ", (0x90 + 0));
{
"292
[; ;main.c: 292:         RC2 = 1;
[e ( _clear_screen ..  ]
"293
[; ;main.c: 293:         TMR2ON = 1;
[e ( _clcd_print (2 , :s 19C -> + -> 192 `i -> 0 `i `uc ]
"294
[; ;main.c: 294:         sec = 180;
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"295
[; ;main.c: 295:         while(sec!=0)
[e ( _clear_screen ..  ]
"296
[; ;main.c: 296:         {
[e = _operation_flag -> 2 `i ]
"297
[; ;main.c: 297: 
}
[e $U 159  ]
"298
[; ;main.c: 298:         clcd_putch((sec/100) + '0', (0x90 + 11));
[e :U 158 ]
[e $ ! && <= -> F895 `i -> 180 `i != -> F895 `i -> 0 `i 160  ]
"299
[; ;main.c: 299:         clcd_putch((sec/10)%10 + '0', (0x90 + 12));
{
"300
[; ;main.c: 300:         clcd_putch((sec%10) + '0', (0x90 + 13));
[e ( _clear_screen ..  ]
"302
[; ;main.c: 302:         if(sec == 0)
[e ( _clcd_print (2 , :s 20C -> + -> 128 `i -> 0 `i `uc ]
"303
[; ;main.c: 303:         {
[e ( _clcd_print (2 , :s 21C -> + -> 144 `i -> 0 `i `uc ]
"304
[; ;main.c: 304:            flag = 1;
[e = _RC2 -> -> 1 `i `b ]
"305
[; ;main.c: 305:            clear_screen();
[e = _TMR2ON -> -> 1 `i `b ]
"306
[; ;main.c: 306:            clcd_print("  Set the Time  ", (0xC0 + 0));
[e = _sec -> -> 180 `i `uc ]
"307
[; ;main.c: 307:            RC1 = 1;
[e $U 161  ]
[e :U 162 ]
"308
[; ;main.c: 308:            _delay((unsigned long)((3000)*(20000000/4000.0)));
{
"310
[; ;main.c: 310:            RC2 = 0;
[e ( _clcd_putch (2 , -> + -> / -> _sec `i -> 100 `i `ui -> 48 `ui `uc -> + -> 144 `i -> 11 `i `uc ]
"311
[; ;main.c: 311:            RC1 = 0;
[e ( _clcd_putch (2 , -> + -> % / -> _sec `i -> 10 `i -> 10 `i `ui -> 48 `ui `uc -> + -> 144 `i -> 12 `i `uc ]
"312
[; ;main.c: 312:            TMR2ON = 0;
[e ( _clcd_putch (2 , -> + -> % -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 144 `i -> 13 `i `uc ]
"313
[; ;main.c: 313: 
}
[e :U 161 ]
"307
[; ;main.c: 307:            RC1 = 1;
[e $ != -> _sec `i -> 0 `i 162  ]
[e :U 163 ]
"314
[; ;main.c: 314:         }
[e $ ! == -> _sec `i -> 0 `i 164  ]
"315
[; ;main.c: 315:         }
{
"316
[; ;main.c: 316:     }
[e = _flag -> -> 1 `i `uc ]
"317
[; ;main.c: 317:     if(wait++ ==15)
[e ( _clear_screen ..  ]
"318
[; ;main.c: 318:     {
[e ( _clcd_print (2 , :s 22C -> + -> 192 `i -> 0 `i `uc ]
"319
[; ;main.c: 319:         wait =0;
[e = _RC1 -> -> 1 `i `b ]
"320
[; ;main.c: 320:         blink =!blink;
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"321
[; ;main.c: 321: 
[e ( _clear_screen ..  ]
"322
[; ;main.c: 322: 
[e = _RC2 -> -> 0 `i `b ]
"323
[; ;main.c: 323:         clcd_putch((temp/100) + '0', (0xC0 + 8));
[e = _RC1 -> -> 0 `i `b ]
"324
[; ;main.c: 324:         clcd_putch((temp/10)%10 + '0', (0xC0 + 9));
[e = _TMR2ON -> -> 0 `i `b ]
"326
[; ;main.c: 326:     }
}
[e :U 164 ]
"327
[; ;main.c: 327:     if(blink)
}
[e :U 160 ]
[e :U 159 ]
"328
[; ;main.c: 328:     {
}
[e :U 157 ]
[e :U 156 ]
[e :U 154 ]
"329
[; ;main.c: 329:         clcd_print("   ", (0xC0 + 8));
[e $ ! == ++ F896 -> 1 `i -> 15 `i 165  ]
"330
[; ;main.c: 330:     }
{
"331
[; ;main.c: 331: 
[e = F896 -> 0 `i ]
"332
[; ;main.c: 332: }
[e = F894 -> -> ! != -> F894 `i -> 0 `i `i `uc ]
"335
[; ;main.c: 335:     static unsigned char key_count, blink_pos,blink;
[e ( _clcd_putch (2 , -> + -> / -> F895 `i -> 100 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 8 `i `uc ]
"336
[; ;main.c: 336:     static int wait;
[e ( _clcd_putch (2 , -> + -> % / -> F895 `i -> 10 `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 9 `i `uc ]
"337
[; ;main.c: 337:     if(reset_flag == 0x10)
[e ( _clcd_putch (2 , -> + -> % -> F895 `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 10 `i `uc ]
"338
[; ;main.c: 338:     {
}
[e :U 165 ]
"339
[; ;main.c: 339:         key_count = 0;
[e $ ! != -> F894 `i -> 0 `i 166  ]
"340
[; ;main.c: 340:         sec =0;
{
"341
[; ;main.c: 341:         min =0;
[e ( _clcd_print (2 , :s 23C -> + -> 192 `i -> 8 `i `uc ]
"342
[; ;main.c: 342:         blink_pos =0;
}
[e :U 166 ]
"344
[; ;main.c: 344:         blink=0;
[e :UE 150 ]
}
"345
[; ;main.c: 345:         key =0xFF;
[v _set_time `(v ~T0 @X0 1 ef2`uc`i ]
"346
[; ;main.c: 346:         clcd_print("SET TIME (MM:SS)", (0x80 + 0));
{
[e :U _set_time ]
"345
[; ;main.c: 345:         key =0xFF;
[v _key `uc ~T0 @X0 1 r1 ]
[v _reset_flag `i ~T0 @X0 1 r2 ]
"346
[; ;main.c: 346:         clcd_print("SET TIME (MM:SS)", (0x80 + 0));
[f ]
"347
[; ;main.c: 347:         clcd_print("TIME- ", (0xC0 + 0));
[v F900 `uc ~T0 @X0 1 s key_count ]
[v F901 `uc ~T0 @X0 1 s blink_pos ]
[v F902 `uc ~T0 @X0 1 s blink ]
"348
[; ;main.c: 348:         clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));
[v F903 `i ~T0 @X0 1 s wait ]
"349
[; ;main.c: 349:     }
[e $ ! == _reset_flag -> 16 `i 168  ]
"350
[; ;main.c: 350: 
{
"351
[; ;main.c: 351: 
[e = F900 -> -> 0 `i `uc ]
"352
[; ;main.c: 352:     if((key!='*')&& (key != '#')&& (key!= 0xFF))
[e = _sec -> -> 0 `i `uc ]
"353
[; ;main.c: 353:     {
[e = _min -> -> 0 `i `uc ]
"354
[; ;main.c: 354:         key_count++;
[e = F901 -> -> 0 `i `uc ]
"355
[; ;main.c: 355:         if(key_count <=2)
[e = F903 -> 0 `i ]
"356
[; ;main.c: 356:         {
[e = F902 -> -> 0 `i `uc ]
"357
[; ;main.c: 357:         sec = sec * 10 + key;
[e = _key -> -> 255 `i `uc ]
"358
[; ;main.c: 358:         blink_pos=0;
[e ( _clcd_print (2 , :s 24C -> + -> 128 `i -> 0 `i `uc ]
"359
[; ;main.c: 359:         }
[e ( _clcd_print (2 , :s 25C -> + -> 192 `i -> 0 `i `uc ]
"360
[; ;main.c: 360:         else if(key_count >2 && key_count <= 4)
[e ( _clcd_print (2 , :s 26C -> + -> 208 `i -> 0 `i `uc ]
"361
[; ;main.c: 361:         {
}
[e :U 168 ]
"364
[; ;main.c: 364:         }
[e $ ! && && != -> _key `ui -> 42 `ui != -> _key `ui -> 35 `ui != -> _key `i -> 255 `i 169  ]
"365
[; ;main.c: 365:     }
{
"366
[; ;main.c: 366:     else if(key == '*')
[e ++ F900 -> -> 1 `i `uc ]
"367
[; ;main.c: 367:     {
[e $ ! <= -> F900 `i -> 2 `i 170  ]
"368
[; ;main.c: 368:         if(blink_pos == 0)
{
"369
[; ;main.c: 369:         {
[e = _sec -> + * -> _sec `i -> 10 `i -> _key `i `uc ]
"370
[; ;main.c: 370:             sec = 0;
[e = F901 -> -> 0 `i `uc ]
"371
[; ;main.c: 371:             key_count =0;
}
[e $U 171  ]
"372
[; ;main.c: 372:         }
[e :U 170 ]
[e $ ! && > -> F900 `i -> 2 `i <= -> F900 `i -> 4 `i 172  ]
"373
[; ;main.c: 373:         else if(blink_pos == 1)
{
"374
[; ;main.c: 374:         {
[e = _min -> + * -> _min `i -> 10 `i -> _key `i `uc ]
"375
[; ;main.c: 375:             min = 0;
[e = F901 -> -> 1 `i `uc ]
"376
[; ;main.c: 376:             key_count = 2;
}
[e :U 172 ]
[e :U 171 ]
"377
[; ;main.c: 377:         }
}
[e $U 173  ]
"378
[; ;main.c: 378:     }
[e :U 169 ]
[e $ ! == -> _key `ui -> 42 `ui 174  ]
"379
[; ;main.c: 379:     else if(key == '#')
{
"380
[; ;main.c: 380:     {
[e $ ! == -> F901 `i -> 0 `i 175  ]
"381
[; ;main.c: 381:        flag = 0;
{
"382
[; ;main.c: 382:        clear_screen();
[e = _sec -> -> 0 `i `uc ]
"383
[; ;main.c: 383:        operation_flag = 0x07;
[e = F900 -> -> 0 `i `uc ]
"384
[; ;main.c: 384:        RC2 = 1;
}
[e $U 176  ]
"385
[; ;main.c: 385: 
[e :U 175 ]
[e $ ! == -> F901 `i -> 1 `i 177  ]
"386
[; ;main.c: 386:        TMR2ON = 1;
{
"387
[; ;main.c: 387:     }
[e = _min -> -> 0 `i `uc ]
"388
[; ;main.c: 388:     if(wait++ ==15)
[e = F900 -> -> 2 `i `uc ]
"389
[; ;main.c: 389:     {
}
[e :U 177 ]
[e :U 176 ]
"390
[; ;main.c: 390:         wait =0;
}
[e $U 178  ]
"391
[; ;main.c: 391:         blink =!blink;
[e :U 174 ]
[e $ ! == -> _key `ui -> 35 `ui 179  ]
"392
[; ;main.c: 392: 
{
"393
[; ;main.c: 393:     clcd_putch(min/10 + '0', (0xC0 + 6));
[e = _flag -> -> 0 `i `uc ]
"394
[; ;main.c: 394:     clcd_putch(min%10 + '0', (0xC0 + 7));
[e ( _clear_screen ..  ]
"395
[; ;main.c: 395:     clcd_putch(':', (0xC0 + 8));
[e = _operation_flag -> 7 `i ]
"396
[; ;main.c: 396: 
[e = _RC2 -> -> 1 `i `b ]
"398
[; ;main.c: 398:     clcd_putch(sec%10 + '0', (0xC0 + 10));
[e = _TMR2ON -> -> 1 `i `b ]
"399
[; ;main.c: 399:     }
}
[e :U 179 ]
[e :U 178 ]
[e :U 173 ]
"400
[; ;main.c: 400:     if(blink)
[e $ ! == ++ F903 -> 1 `i -> 15 `i 180  ]
"401
[; ;main.c: 401:     {
{
"402
[; ;main.c: 402:         switch(blink_pos)
[e = F903 -> 0 `i ]
"403
[; ;main.c: 403:         {
[e = F902 -> -> ! != -> F902 `i -> 0 `i `i `uc ]
"405
[; ;main.c: 405:                 clcd_print("  ", (0xC0 + 9));
[e ( _clcd_putch (2 , -> + -> / -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 6 `i `uc ]
"406
[; ;main.c: 406:                 break;
[e ( _clcd_putch (2 , -> + -> % -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 7 `i `uc ]
"407
[; ;main.c: 407:             case 1:
[e ( _clcd_putch (2 , -> -> 58 `ui `uc -> + -> 192 `i -> 8 `i `uc ]
"409
[; ;main.c: 409:                 break;
[e ( _clcd_putch (2 , -> + -> / -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 9 `i `uc ]
"410
[; ;main.c: 410: 
[e ( _clcd_putch (2 , -> + -> % -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 10 `i `uc ]
"411
[; ;main.c: 411:         }
}
[e :U 180 ]
"412
[; ;main.c: 412: 
[e $ ! != -> F902 `i -> 0 `i 181  ]
"413
[; ;main.c: 413: 
{
"414
[; ;main.c: 414:     }
[e $U 183  ]
"415
[; ;main.c: 415: 
{
"416
[; ;main.c: 416: 
[e :U 184 ]
"417
[; ;main.c: 417: 
[e ( _clcd_print (2 , :s 27C -> + -> 192 `i -> 9 `i `uc ]
"418
[; ;main.c: 418: 
[e $U 182  ]
"419
[; ;main.c: 419: 
[e :U 185 ]
"420
[; ;main.c: 420: }
[e ( _clcd_print (2 , :s 28C -> + -> 192 `i -> 6 `i `uc ]
"421
[e $U 182  ]
"423
}
[e $U 182  ]
[e :U 183 ]
[e [\ -> F901 `i , $ -> 0 `i 184
 , $ -> 1 `i 185
 182 ]
[e :U 182 ]
"426
}
[e :U 181 ]
"432
[e :UE 167 ]
}
[a 14C 52 46 83 116 97 114 116 0 ]
[a 7C 32 54 46 83 116 111 112 0 ]
[a 11C 49 46 77 105 99 114 111 0 ]
[a 13C 51 46 67 111 110 118 101 99 116 105 111 110 0 ]
[a 2C 68 79 79 82 32 105 115 32 79 112 101 110 0 ]
[a 12C 50 46 71 114 105 108 108 0 ]
[a 6C 32 53 46 80 97 117 115 101 0 ]
[a 3C 80 108 101 97 115 101 32 67 108 111 115 101 0 ]
[a 5C 32 52 46 83 116 97 114 116 47 82 101 115 117 109 101 0 ]
[a 18C 42 58 67 76 69 65 82 32 32 35 58 69 78 84 69 82 0 ]
[a 26C 42 58 67 76 69 65 82 32 32 35 58 69 78 84 69 82 0 ]
[a 24C 83 69 84 32 84 73 77 69 32 40 77 77 58 83 83 41 0 ]
[a 10C 32 77 105 99 114 111 119 97 118 101 32 79 118 101 110 32 0 ]
[a 1C 32 112 111 119 101 114 32 61 32 57 48 48 87 32 0 ]
[a 21C 32 84 105 109 101 32 82 101 109 46 61 32 0 ]
[a 16C 84 69 77 80 32 61 32 0 ]
[a 4C 84 73 77 69 32 61 32 0 ]
[a 25C 84 73 77 69 45 32 0 ]
[a 17C 40 76 73 77 73 84 32 58 32 49 56 48 32 67 41 32 0 ]
[a 15C 83 69 84 32 84 69 77 80 32 40 32 67 41 32 0 ]
[a 8C 32 84 105 109 101 32 85 112 33 32 0 ]
[a 20C 32 32 80 114 101 45 72 101 97 116 105 110 103 32 32 0 ]
[a 22C 32 32 83 101 116 32 116 104 101 32 84 105 109 101 32 32 0 ]
[a 19C 32 32 84 101 109 112 46 32 73 110 118 97 108 105 100 32 32 0 ]
[a 9C 32 32 80 111 119 101 114 105 110 103 32 79 78 32 32 0 ]
[a 23C 32 32 32 0 ]
[a 27C 32 32 0 ]
[a 28C 32 32 0 ]
